// Create variables
// Global scope
$color-primary: orange;
$color-secondary: gray;
$color-tertiary: royalblue;

$font-lg: 40px;
$font-md: 30px;
$font-sm: 20px;

.nav {
  // Local scope
  // One commonly used function
  // Source of others: sass.lang.com/documentation/Sass/Script/Functions.html
  background-color: mix(blue, green, 10%);

  // Nesting in SASS
  ul li {
    list-style: none;
  }

  // Nesting in SASS
  a {
    text-decoration: none;
    font-size: $font-sm;
    color: $color-secondary;

    &:hover {
      color: $color-tertiary;
    }
  }
}
// mixin is a block of code, which groups bunch of resusable CSS styles
// @mixin headingStyles($fontSize: 50px) {
//   font-size: $fontSize;
//   color: $color-secondary;
//   text-align: center;
// }

// taking multiple properties into a parameter
// @mixin transition($param...) {
//   transition: $param;
// }

.heading {
  color: $color-primary;
  font-size: $font-lg;
  background-color: $color-secondary;
  text-align: center;
}

// function allows us to run code over and over again when we call it.
@function fontSize($size: 25px) {
  @return $size * 2;
}

h1 {
  // @include headingStyles($font-lg);

  // Extend allow one selector to inherit styles of another selector
  // a combination of selector doesn't work with extend
  @extend .heading;

  &:hover {
    background-color: green;
  }
}

.footer h3 {
  // @include headingStyles;
  // @include transition(color 0.5s, background-color 1s);
  // &:hover {
  //   color: $color-tertiary;
  //   background-color: $color-primary;
  // }

  @extend h1;
}

// using function
.banner p {
  font-size: fontSize($font-sm);
}

.footer p {
  font-size: fontSize();
}
